{
  "version": 3,
  "file": "my-service.js",
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8EAAyE;AAEzE,MAAM,GAAG,GAAG,qBAAO,GAAE,CAAC;AACtB,MAAM,MAAM,GAAG,oBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAiB,EAAE;IACrF,IAAI;QACA,MAAM,IAAI,GAAG;YACT,GAAG,EAAE,KAAK;SACb,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACrB,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE;IAChB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;;;;;;;;;;;ACnBH;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA",
  "sources": [
    "webpack://attach-issue/./src/index.ts",
    "webpack://attach-issue/external commonjs \"express\"",
    "webpack://attach-issue/webpack/bootstrap",
    "webpack://attach-issue/webpack/before-startup",
    "webpack://attach-issue/webpack/startup",
    "webpack://attach-issue/webpack/after-startup"
  ],
  "sourcesContent": [
    "import express, {NextFunction, Request, Response, Router} from \"express\";\r\n\r\nconst app = express();\r\nconst router = Router();\r\n\r\nrouter.get(\"/\", async (req: Request, res: Response, next: NextFunction): Promise<void> => {\r\n    try {\r\n        const info = {\r\n            foo: \"bar\"\r\n        };\r\n        res.json(info);\r\n    } catch (error) {\r\n        console.error(error);\r\n        next(error);\r\n    }\r\n});\r\napp.use(\"/\", router);\r\napp.listen(80, () => {\r\n    console.log(\"Listening...\");\r\n});",
    "module.exports = require(\"express\");",
    "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n",
    "",
    "// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",
    ""
  ],
  "names": [],
  "sourceRoot": ""
}
